name: assignment4

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create log file
        run: |
          echo "$(date -Iminutes)" > log.txt
          echo "Yonatan Hirshman" >> log.txt

      - name: Build Docker images
        run: |
          docker build -t stocks:latest ./stocks
          docker build -t capital-gains:latest ./capital-gains
          if [ $? -eq 0 ]; then
            echo "image successfully built" >> log.txt
          else
            echo "image not able to be built" >> log.txt
            exit 1
          fi

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log.txt
          path: log.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download log file
        uses: actions/download-artifact@v4
        with:
          name: log.txt

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests

      - name: Start containers
        run: |
          docker compose up -d
          sleep 10  # Wait for containers to be ready
          if [ "$(docker ps -q -f status=running | wc -l)" -eq 3 ]; then
            echo "Container up and running" >> log.txt
          else
            echo "Container failed to run" >> log.txt
            exit 1
          fi

      - name: Run tests
        run: |
          pytest -v tests/assn4_tests.py > assn4_test_results.txt || true
          if [ $? -eq 0 ]; then
            echo "tests succeeded" >> log.txt
          else
            echo "tests failed" >> log.txt
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: assn4_test_results.txt
          path: assn4_test_results.txt

      - name: Upload updated log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log.txt
          path: log.txt

  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start containers
        run: docker compose up -d

      - name: Install Python and requests
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Execute POST requests for stocks
        run: |
          python -c '
          import requests
          import json

          stocks = [
              {
                  "name": "NVIDIA Corporation",
                  "symbol": "NVDA",
                  "purchase price": 134.66,
                  "purchase date": "18-06-2024",
                  "shares": 7
              },
              {
                  "name": "Apple Inc.",
                  "symbol": "AAPL",
                  "purchase price": 183.63,
                  "purchase date": "22-02-2024",
                  "shares": 19
              },
              {
                  "name": "Alphabet Inc.",
                  "symbol": "GOOG",
                  "purchase price": 140.12,
                  "purchase date": "24-10-2024",
                  "shares": 14
              },
              {
                  "name": "Tesla, Inc.",
                  "symbol": "TSLA",
                  "purchase price": 194.58,
                  "purchase date": "28-11-2022",
                  "shares": 32
              },
              {
                  "name": "Microsoft Corporation",
                  "symbol": "MSFT",
                  "purchase price": 420.55,
                  "purchase date": "09-02-2024",
                  "shares": 35
              },
              {
                  "name": "Intel Corporation",
                  "symbol": "INTC",
                  "purchase price": 19.15,
                  "purchase date": "13-01-2025",
                  "shares": 10
              }
          ]

          for stock in stocks:
              response = requests.post("http://localhost:5001/stocks", json=stock)
              print(f"Posted {stock[\"symbol\"]}: {response.status_code}")
          '

      - name: Process queries and generate response
        run: |
          python -c '
          import requests
          import os

          with open("query.txt", "r") as f:
              queries = f.readlines()

          with open("response.txt", "w") as f:
              for query in queries:
                  query = query.strip()
                  service, qs = query.split(":")
                  
                  if service == "stocks":
                      url = f"http://localhost:5001/stocks?{qs}"
                  else:
                      url = f"http://localhost:5003/capital-gains?{qs}"
                      
                  response = requests.get(url)
                  
                  f.write(f"query: {query}\n")
                  f.write(f"response: {response.text}\n")
          '

      - name: Upload response file
        uses: actions/upload-artifact@v4
        with:
          name: response.txt
          path: response.txt